{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/SearchResults.tsx"],"sourcesContent":["'use client';\nimport { useRouter } from 'next/navigation';\n\ninterface SearchResultProps {\n  drinks: any[];\n}\n\nconst SearchResult: React.FC<SearchResultProps> = ({ drinks }) => {\n  const router = useRouter();\n\n  const handleDrinkClick = (id: string) => {\n    router.push(`/search-results/drink/${id}`);\n  };\n\n  return (\n    <div>\n      {drinks.map((drink, index) => (\n        <div\n          key={index}\n          className=\"text-black p-4 bg-white\"\n        >\n          <h2 className=\"font-semibold text-lg\">{drink.strDrink}</h2>\n          <button           onClick={() => handleDrinkClick(drink.idDrink)} className=\"p-2 text-black border-2 border-secondary-pink-darker bg-secondary-pink rounded-md\">See details</button>\n          <div>\n            {Object.entries(drink).map(([key, value]) => (\n              // Render each key-value pair\n              <p key={key}>\n                <strong>{key}:</strong> {String(value) || 'N/A'}\n              </p>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SearchResult;\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAOA,MAAM,eAA4C,CAAC,EAAE,MAAM,EAAE;IAC3D,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,mBAAmB,CAAC;QACxB,OAAO,IAAI,CAAC,CAAC,sBAAsB,EAAE,IAAI;IAC3C;IAEA,qBACE,8OAAC;kBACE,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC;gBAEC,WAAU;;kCAEV,8OAAC;wBAAG,WAAU;kCAAyB,MAAM,QAAQ;;;;;;kCACrD,8OAAC;wBAAiB,SAAS,IAAM,iBAAiB,MAAM,OAAO;wBAAG,WAAU;kCAAoF;;;;;;kCAChK,8OAAC;kCACE,OAAO,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GACtC,6BAA6B;0CAC7B,8OAAC;;kDACC,8OAAC;;4CAAQ;4CAAI;;;;;;;oCAAU;oCAAE,OAAO,UAAU;;+BADpC;;;;;;;;;;;eARP;;;;;;;;;;AAiBf;uCAEe"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/utils/cache.js"],"sourcesContent":["/**\n * This is a simple cache that stores the results of the api calls\n */\nclass Cache {\n  constructor() {\n    this.cache = {};\n    this.nbrItems = 0;\n  }\n\n  /** get the key from cacheretusn undefined if the key is not present in cache\n   *\n   * @param key either the id for a drink or name of the search\n   * @return a json of either one drink or many drinks, undefined if the key is not present in cache\n   */\n  get(key) {\n    return this.cache[key];\n  }\n\n  set(key, value) {\n    // we do not want to store too much but going to like 200 might be completely fine\n    if (this.nbrItems > 50) {\n      this.cache = {};\n      this.nbrItems = 0;\n    }\n    this.nbrItems++;\n    this.cache[key] = value;\n    if (Array.isArray(value)) {\n      value.forEach(item => (this.cache[item['idDrink']] = item));\n      this.nbrItems += value.length;\n    }\n  }\n}\n\n// nice lil singleton\nexport default new Cache();\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACD,MAAM;IACJ,aAAc;QACZ,IAAI,CAAC,KAAK,GAAG,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG;IAClB;IAEA;;;;GAIC,GACD,IAAI,GAAG,EAAE;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;IACxB;IAEA,IAAI,GAAG,EAAE,KAAK,EAAE;QACd,kFAAkF;QAClF,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI;YACtB,IAAI,CAAC,KAAK,GAAG,CAAC;YACd,IAAI,CAAC,QAAQ,GAAG;QAClB;QACA,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;QAClB,IAAI,MAAM,OAAO,CAAC,QAAQ;YACxB,MAAM,OAAO,CAAC,CAAA,OAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG;YACrD,IAAI,CAAC,QAAQ,IAAI,MAAM,MAAM;QAC/B;IACF;AACF;uCAGe,IAAI"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/utils/fetchJson.tsx"],"sourcesContent":["export default async function fetchJson(url: string) {\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error(`${url} returned status ${response.status}`);\n    }\n\n    return response.text().then(text => {\n      return text ? JSON.parse(text) : {};\n    });\n  });\n}\n"],"names":[],"mappings":";;;AAAe,eAAe,UAAU,GAAW;IACjD,OAAO,MAAM,KAAK,IAAI,CAAC,CAAA;QACrB,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,GAAG,IAAI,iBAAiB,EAAE,SAAS,MAAM,EAAE;QAC7D;QAEA,OAAO,SAAS,IAAI,GAAG,IAAI,CAAC,CAAA;YAC1B,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ,CAAC;QACpC;IACF;AACF"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/utils/searchLoader.tsx"],"sourcesContent":["import cache from './cache';\nimport fetchJson from './fetchJson';\n\nexport default async function searchLoader(query: string): Promise<any[]> {\n  return (\n    cache.get(query) ||\n    fetchJson(\n      `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${query}`\n    ).then(res => {\n      const drinks = res.drinks;\n      cache.set(query, drinks);\n      return drinks;\n    })\n  );\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEe,eAAe,aAAa,KAAa;IACtD,OACE,4HAAA,CAAA,UAAK,CAAC,GAAG,CAAC,UACV,CAAA,GAAA,iIAAA,CAAA,UAAS,AAAD,EACN,CAAC,yDAAyD,EAAE,OAAO,EACnE,IAAI,CAAC,CAAA;QACL,MAAM,SAAS,IAAI,MAAM;QACzB,4HAAA,CAAA,UAAK,CAAC,GAAG,CAAC,OAAO;QACjB,OAAO;IACT;AAEJ"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/search-results/[searchQuery]/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { use } from 'react';\nimport SearchResult from '@/app/components/SearchResults';\nimport searchLoader from '@/app/utils/searchLoader';\n\nexport default function SearchResultsPage({\n  params,\n}: {\n  params: Promise<{ searchQuery: string }>;\n}) {\n  const { searchQuery } = use(params); // Unwrap `params` using `React.use()`\n  \n  const [searchResult, setSearchResult] = useState<any[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const result = await searchLoader(searchQuery);\n\n        if (result.length === 0) {\n          setError(`No results found for \"${searchQuery}\"`);\n        } else {\n          setSearchResult(result);\n        }\n      } catch (err) {\n        setError(\"No results found\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [searchQuery]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return (\n      <div>\n        <h1>{error}</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Search Results for \"{searchQuery}\"</h1>\n      <SearchResult drinks={searchResult} />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AALA;;;;;;AAOe,SAAS,kBAAkB,EACxC,MAAM,EAGP;IACC,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,MAAG,AAAD,EAAE,SAAS,sCAAsC;IAE3E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC1D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,WAAW;gBACX,SAAS;gBACT,MAAM,SAAS,MAAM,CAAA,GAAA,oIAAA,CAAA,UAAY,AAAD,EAAE;gBAElC,IAAI,OAAO,MAAM,KAAK,GAAG;oBACvB,SAAS,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC;gBAClD,OAAO;oBACL,gBAAgB;gBAClB;YACF,EAAE,OAAO,KAAK;gBACZ,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAY;IAEhB,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,IAAI,OAAO;QACT,qBACE,8OAAC;sBACC,cAAA,8OAAC;0BAAI;;;;;;;;;;;IAGX;IAEA,qBACE,8OAAC;;0BACC,8OAAC;;oBAAG;oBAAqB;oBAAY;;;;;;;0BACrC,8OAAC,0IAAA,CAAA,UAAY;gBAAC,QAAQ;;;;;;;;;;;;AAG5B"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}